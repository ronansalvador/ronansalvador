{"ast":null,"code":"var _jsxFileName = \"/home/ronan/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/bloco12-dia1/src/components/DadJoke.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DadJoke extends React.Component {\n  constructor() {\n    super();\n    this.saveJoke = this.saveJoke.bind(this);\n    this.state = {\n      jokeObj: undefined,\n      loading: true,\n      storedJokes: []\n    };\n  }\n\n  async fetchJoke() {\n    const requestHeaders = {\n      headers: {\n        Accept: 'application/json'\n      }\n    };\n    const requestReturn = await fetch('https://icanhazdadjoke.com/', requestHeaders);\n    const requestObject = await requestReturn.json();\n    this.setState({\n      jokeObj: requestObject\n    });\n  }\n\n  componentDidMount() {\n    this.fetchJoke();\n  }\n\n  saveJoke() {\n    this.setState({\n      storedJokes: this.state.jokeObj\n    });\n  }\n\n  render() {\n    const {\n      storedJokes\n    } = this.state; // const loadingElement = <span>Loading...</span>;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: storedJokes.map(_ref => {\n          let {\n            id,\n            joke\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: joke\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 47\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DadJoke;","map":{"version":3,"sources":["/home/ronan/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/bloco12-dia1/src/components/DadJoke.jsx"],"names":["React","DadJoke","Component","constructor","saveJoke","bind","state","jokeObj","undefined","loading","storedJokes","fetchJoke","requestHeaders","headers","Accept","requestReturn","fetch","requestObject","json","setState","componentDidMount","render","map","id","joke"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEC,SADE;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEc,QAATC,SAAS,GAAG;AAChB,UAAMC,cAAc,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAX,KAAvB;AACA,UAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgCJ,cAAhC,CAAjC;AACA,UAAMK,aAAa,GAAG,MAAMF,aAAa,CAACG,IAAd,EAA5B;AACA,SAAKC,QAAL,CAAc;AACZZ,MAAAA,OAAO,EAAEU;AADG,KAAd;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,SAAL;AACD;;AAEDP,EAAAA,QAAQ,GAAG;AACT,SAAKe,QAAL,CAAc;AACZT,MAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC;AADZ,KAAd;AAGD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAkB,KAAKJ,KAA7B,CADO,CAEP;;AAEA,wBACE;AAAA,6BACE;AAAA,kBACGI,WAAW,CAACY,GAAZ,CAAgB;AAAA,cAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA;AAAN,WAAD;AAAA,8BAAmB;AAAA,sBAAaA;AAAb,aAAQD,EAAR;AAAA;AAAA;AAAA;AAAA,kBAAnB;AAAA,SAAhB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAtDmC;;AAyDtC,eAAetB,OAAf","sourcesContent":["import React from 'react';\n\nclass DadJoke extends React.Component {\n  constructor() {\n    super();\n\n    this.saveJoke = this.saveJoke.bind(this);\n\n    this.state = {\n      jokeObj: undefined,\n      loading: true,\n      storedJokes: [],\n    }\n  }\n\n  async fetchJoke() {\n    const requestHeaders = { headers: { Accept: 'application/json' } }\n    const requestReturn = await fetch('https://icanhazdadjoke.com/', requestHeaders)\n    const requestObject = await requestReturn.json();\n    this.setState({\n      jokeObj: requestObject,\n    })\n  }\n\n  componentDidMount() {\n    this.fetchJoke();\n  }\n\n  saveJoke() {\n    this.setState({\n      storedJokes: this.state.jokeObj,\n    })\n  }\n\n  render() {\n    const { storedJokes } = this.state;\n    // const loadingElement = <span>Loading...</span>;\n\n    return (\n      <div>\n        <span>\n          {storedJokes.map(({ id, joke }) => (<p key={id}>{joke}</p>))}\n        </span>\n\n      {\n        /*\n        Aqui vamos construir nossa lógica com uma renderização condicional\n        do nosso componente Joke, a ideia é renderizar um loading enquanto\n        esperamos a nossa requisição de piadas finalizar.\n\n        <p>RENDERIZAÇÃO CONDICIONAL</p>\n        */\n      }\n\n      </div>\n    );\n  }\n}\n\nexport default DadJoke;"]},"metadata":{},"sourceType":"module"}